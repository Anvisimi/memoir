syntax = "proto3";

package memoir.memoir;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "memoir/memoir/params.proto";
import "memoir/memoir/story.proto";

option go_package = "memoir/x/memoir/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/memoir/memoir/params";
  
  }
  
  // Queries a list of ShowStory items.
  rpc ShowStory (QueryShowStoryRequest) returns (QueryShowStoryResponse) {
    option (google.api.http).get = "/memoir/memoir/show_story/{id}";
  
  }
  
  // Queries a list of ListStory items.
  rpc ListStory (QueryListStoryRequest) returns (QueryListStoryResponse) {
    option (google.api.http).get = "/memoir/memoir/list_story";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryShowStoryRequest {
  uint64 id = 1;
}

message QueryShowStoryResponse {
  Story story = 1;
}

message QueryListStoryRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryListStoryResponse {
  Story                                  story      = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

